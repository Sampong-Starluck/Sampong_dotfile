# This workflow will upload a Python Package to PyPI when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
name: Build Windows Installer

on:
  push:
    tags:
      - "v*"   # Run only when you push a version tag like v1.0.0
  workflow_dispatch:   # Allow manual trigger

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if exist requirements.txt (
          pip install -r requirements.txt
        )
        pip install pyinstaller

    - name: Build EXE with PyInstaller
      run: pyinstaller --onefile main.py --name installer

    - name: Zip source code
      run: Compress-Archive -Path * -DestinationPath source-code.zip
      shell: pwsh

    - name: Upload EXE artifact
      uses: actions/upload-artifact@v4
      with:
        name: installer-exe
        path: dist/installer.exe

    - name: Upload Source Code artifact
      uses: actions/upload-artifact@v4
      with:
        name: source-code
        path: source-code.zip

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        files: |
          dist/installer.exe
          source-code.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
